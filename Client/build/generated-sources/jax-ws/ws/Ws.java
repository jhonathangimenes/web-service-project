
package ws;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ws", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Ws {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://ws/", className = "ws.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://ws/", className = "ws.HelloResponse")
    @Action(input = "http://ws/ws/helloRequest", output = "http://ws/ws/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Employee>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmployee", targetNamespace = "http://ws/", className = "ws.GetEmployee")
    @ResponseWrapper(localName = "getEmployeeResponse", targetNamespace = "http://ws/", className = "ws.GetEmployeeResponse")
    @Action(input = "http://ws/ws/getEmployeeRequest", output = "http://ws/ws/getEmployeeResponse")
    public List<Employee> getEmployee();

    /**
     * 
     * @param c
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addConsignment", targetNamespace = "http://ws/", className = "ws.AddConsignment")
    @Action(input = "http://ws/ws/addConsignment")
    public void addConsignment(
        @WebParam(name = "c", targetNamespace = "")
        Consignment c);

    /**
     * 
     * @param p
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addPortion", targetNamespace = "http://ws/", className = "ws.AddPortion")
    @Action(input = "http://ws/ws/addPortion")
    public void addPortion(
        @WebParam(name = "p", targetNamespace = "")
        Portion p);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Consignment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getConsignment", targetNamespace = "http://ws/", className = "ws.GetConsignment")
    @ResponseWrapper(localName = "getConsignmentResponse", targetNamespace = "http://ws/", className = "ws.GetConsignmentResponse")
    @Action(input = "http://ws/ws/getConsignmentRequest", output = "http://ws/ws/getConsignmentResponse")
    public List<Consignment> getConsignment();

    /**
     * 
     * @param e
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addEmployee", targetNamespace = "http://ws/", className = "ws.AddEmployee")
    @Action(input = "http://ws/ws/addEmployee")
    public void addEmployee(
        @WebParam(name = "e", targetNamespace = "")
        Employee e);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listaAlunos", targetNamespace = "http://ws/", className = "ws.ListaAlunos")
    @ResponseWrapper(localName = "listaAlunosResponse", targetNamespace = "http://ws/", className = "ws.ListaAlunosResponse")
    @Action(input = "http://ws/ws/listaAlunosRequest", output = "http://ws/ws/listaAlunosResponse")
    public List<String> listaAlunos();

    /**
     * 
     * @param portion
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "payInstallment", targetNamespace = "http://ws/", className = "ws.PayInstallment")
    @Action(input = "http://ws/ws/payInstallment")
    public void payInstallment(
        @WebParam(name = "portion", targetNamespace = "")
        int portion);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Portion>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPortion", targetNamespace = "http://ws/", className = "ws.GetPortion")
    @ResponseWrapper(localName = "getPortionResponse", targetNamespace = "http://ws/", className = "ws.GetPortionResponse")
    @Action(input = "http://ws/ws/getPortionRequest", output = "http://ws/ws/getPortionResponse")
    public List<Portion> getPortion();

}
