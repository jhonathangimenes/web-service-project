/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientes;

import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import ws.Consignment;
import ws.Employee;
import ws.Portion;

/**
 *
 * @author Jhonathan
 */
public class HireConsignment extends javax.swing.JFrame {
    List<Employee> listEmployee = new ArrayList<Employee>();
    List<Consignment> listConsignment = new ArrayList<Consignment>();
    /**
     * Creates new form hireConsignment
     */
    public HireConsignment() {
        initComponents();
    }
    
    private String getDateYear() { 
	DateFormat dateFormat = new SimpleDateFormat("yyyy"); 
	Date date = new Date(); 
	return dateFormat.format(date); 
    }
    
    private String getDateMonth() { 
	DateFormat dateFormat = new SimpleDateFormat("MM"); 
	Date date = new Date(); 
	return dateFormat.format(date); 
    }
    
    private String getDateDay() { 
	DateFormat dateFormat = new SimpleDateFormat("dd"); 
	Date date = new Date(); 
	return dateFormat.format(date); 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        registration = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        value = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        day = new javax.swing.JTextField();
        month = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        plots = new javax.swing.JTextField();
        bank = new javax.swing.JTextField();

        jLabel7.setText("jLabel7");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel1.setText("Contratar Consignação");

        jLabel2.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jLabel2.setText("Matricula");

        registration.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jLabel3.setText("Banco");

        jLabel4.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jLabel4.setText("Valor");

        jLabel6.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jLabel6.setText("Parcelas");

        value.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N

        jButton1.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jButton1.setText("Contratar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        day.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N

        month.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N

        year.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jLabel5.setText("Dia");

        jLabel8.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jLabel8.setText("Mês");

        jLabel9.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jLabel9.setText("Ano");

        jLabel10.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jLabel10.setText("Primeiro Pagamento");

        plots.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N

        bank.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(value)
                                    .addComponent(registration, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(plots, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bank, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1)
                            .addComponent(jLabel10))
                        .addContainerGap(58, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plots, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(46, 46, 46))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            hireConsignment();
        } catch (RemoteException ex) {
            Logger.getLogger(HireConsignment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(HireConsignment.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if(registrationVerification() == 1){
                dispose();
            }
        } catch (RemoteException ex) {
            Logger.getLogger(HireConsignment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(HireConsignment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    public boolean fieldVerification(){
        
        try{
            Integer.parseInt(registration.getText());
        }catch(Exception e){
            return false;
        }
        try{
            Integer.parseInt(value.getText());
        }catch(Exception e){
            return false;
        }
        try{
            Integer.parseInt(plots.getText());
        }catch(Exception e){
            return false;
        }
        try{
            Integer.parseInt(day.getText());
        }catch(Exception e){
            return false;
        }
        try{
            Integer.parseInt(month.getText());
        }catch(Exception e){
            return false;
        }
        try{
            Integer.parseInt(year.getText());
        }catch(Exception e){
            return false;
        }
        return true;
    } 
    
    public int registrationVerification() throws RemoteException, NotBoundException{
        
        int permission = 0;
        
        if(fieldVerification()){
          
            listEmployee = getEmployee();

            if(registration.getText().trim().isEmpty() || bank.getText().trim().isEmpty()
                    || value.getText().trim().isEmpty() || day.getText().trim().isEmpty()
                    || month.getText().trim().isEmpty() || year.getText().trim().isEmpty()){
                permission = 4;

            }else{

                for(int i = 0; i < listEmployee.size(); i++){
                    if(listEmployee.get(i).getRegistration() == Integer.parseInt(registration.getText())){
                        permission = 1;
                    }
                }
                if(Integer.parseInt(plots.getText()) > 48){
                    permission = 3;
                }
                if(Integer.parseInt(year.getText()) < Integer.parseInt(getDateYear())){
                    permission = 5;
                }

                if(Integer.parseInt(year.getText()) == Integer.parseInt(getDateYear())){

                    if(Integer.parseInt(month.getText()) < Integer.parseInt(getDateMonth())){
                        permission = 5;
                    }

                    if(Integer.parseInt(day.getText()) < Integer.parseInt(getDateDay())){
                        permission = 5;
                    }
                }
            }
            return permission;
        }else{
            permission = 6;
            return permission;
        }
        
    }
    
    public void hireConsignment() throws RemoteException, NotBoundException{
        
        listConsignment = getConsignment();
        
        if(registrationVerification() == 1){

            int contract_number = 901;
            
            if(listConsignment.size() == 0){
                Consignment c = new Consignment();
                c.setRegistration(Integer.parseInt(registration.getText()));
                c.setValueConsignment(Float.parseFloat(value.getText()));
                c.setBank(bank.getText());
                c.setContractNumber(contract_number);
                c.setPlots(Integer.parseInt(plots.getText()));
                c.setDay(Integer.parseInt(day.getText()));
                c.setMonth(Integer.parseInt(month.getText()));
                c.setYear(Integer.parseInt(year.getText()));
                
                addConsignment(c);
                new ConsignmentMessage().setVisible(true);
            }else{
                int tie = listConsignment.size()+1;
                for(int i = 0; i < tie; i++){
                    if(listConsignment.size() == i){
                        Consignment c = new Consignment();
                        c.setRegistration(Integer.parseInt(registration.getText()));
                        c.setValueConsignment(Float.parseFloat(value.getText()));
                        c.setBank(bank.getText());
                        c.setContractNumber(contract_number);
                        c.setPlots(Integer.parseInt(plots.getText()));
                        c.setDay(Integer.parseInt(day.getText()));
                        c.setMonth(Integer.parseInt(month.getText()));
                        c.setYear(Integer.parseInt(year.getText()));

                        addConsignment(c);
                        new ConsignmentMessage().setVisible(true);
                    }else{
                        contract_number++;
                    }
                }
            }    

            float interest = Float.parseFloat(value.getText())*2 / 100;
            float portion_value = Float.parseFloat(value.getText()) / Float.parseFloat(plots.getText())+interest;

            int newMonth = Integer.parseInt(month.getText());
            int newYear = Integer.parseInt(year.getText());
            for(int i = 0; i < Integer.parseInt(plots.getText()); i++){
                Portion p = new Portion();
                p.setContractNumber(contract_number);
                p.setPortionValue(portion_value);
                p.setStatus("Em Aberto");
                p.setDay(Integer.parseInt(day.getText()));
                p.setMonth(newMonth);
                p.setYear(newYear);
                
                addPortion(p);
                if(newMonth == 12){
                    newMonth = 0;
                    newYear++;
                }
                newMonth++;
            }
        }else if(registrationVerification() == 0){
            new MessageNotExist().setVisible(true);  
        }else if(registrationVerification() == 3){
            new MessageParcels().setVisible(true);
        }else if(registrationVerification() == 5){
            new MessageErrorDate().setVisible(true);
        }else if(registrationVerification() == 6){
            new IncorrectFieldMessage().setVisible(true);
        }else{
            new ErrorMessageForm().setVisible(true);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HireConsignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HireConsignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HireConsignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HireConsignment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HireConsignment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bank;
    private javax.swing.JTextField day;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField month;
    private javax.swing.JTextField plots;
    private javax.swing.JTextField registration;
    private javax.swing.JTextField value;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables

    private Date formatDate(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private static java.util.List<ws.Employee> getEmployee() {
        ws.Ws_Service service = new ws.Ws_Service();
        ws.Ws port = service.getWsPort();
        return port.getEmployee();
    }


    private static java.util.List<ws.Consignment> getConsignment() {
        ws.Ws_Service service = new ws.Ws_Service();
        ws.Ws port = service.getWsPort();
        return port.getConsignment();
    }

    private static void addConsignment(ws.Consignment c) {
        ws.Ws_Service service = new ws.Ws_Service();
        ws.Ws port = service.getWsPort();
        port.addConsignment(c);
    }

    private static void addPortion(ws.Portion p) {
        ws.Ws_Service service = new ws.Ws_Service();
        ws.Ws port = service.getWsPort();
        port.addPortion(p);
    }
    
}
